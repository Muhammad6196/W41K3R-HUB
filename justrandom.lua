-- This file was generated using Luraph Obfuscator v13.5.4

return(function(yD,sD,ED,WD,gD,dD,qD,fD,uD,DI,ID,MI,bD,zD,aD,KD,iD,rD,jD,JD,ND,YD,nI,lD,mD,UD,BD,wD,HD,eD,tD,ZD,QD,RD,VD,GD,CD,XD,xD,vD,LD,hD,OI,oD,PD,AD,...)local F,k=wD,(ID);local O=(select);local FI=0x0004;local v,c=1,(tostring);local X,T,H,w,D,M,a,m=nil,nil,nil,nil,nil,nil,nil,(nil);while FI~=0X8 do if not(FI<=0X3)then do if FI<=5 then if FI~=4 then w=mD;FI=0X6;else do X={[0]=1};end;FI=0;end;elseif FI==0X6 then do D=aD;end;FI=7;else do M=fD;end;FI=0x3;end;end;else if not(FI<=1)then do if FI~=0X2 then a=lD;FI=2;else do m=PD;end;FI=0X8;end;end;else do if FI~=0X0 then H={0X3,0X1,0x2};FI=0X00005;else T=KD;do FI=0X0001;end;end;end;end;end;end;local P=(rawset);local f=(setmetatable);local y=getfenv;local K,Q=nil,nil;do for HL=0x0,1 do if HL~=0 then Q=AD;else do K=string.gsub;end;end;end;end;local S,b,L=type,nil,nil;for a3=0x0,1 do if a3~=0X0 then do L=4294967296;end;else b=0x02^0X34;end;end;local p,A,t=error,gD,(setfenv);FI=0x0003;local G,h,I,i,cD=nil,nil,nil,nil,(nil);while FI~=6 do if not(FI<=2)then do if not(FI<=3)then if FI~=4 then do I=VD;end;FI=1;else FI=0X05;end;else G={[0X00]={[0X0]=0,1,2,0X3,4,0X5,0X6,7,QD,rD,0Xa,0X0B,0Xc,13,tD,15},{[0x00000]=0X1,0x0,0X003,2,5,4,7,6,9,0X8,0Xb,0XA,0Xd,12,0X000f,14},{[0x00]=2,3,0,0X1,6,0X7,yD,5,10,11,8,9,0Xe,0xf,0X000c,13},{[0]=0X3,2,1,0X0000,0X07,hD,0x0005,0X04,vD,0Xa,rD,8,iD,14,13,0Xc},{[0]=4,oD,0x00006,7,0X0,0X1,0X2,0X3,0XC,0XD,0X00E,15,8,9,0XA,0X0B},{[0X000]=5,4,0X0007,6,1,0X000,3,0X2,0X00d,12,15,tD,0X00009,0X0008,11,0X0000a},{[0X000]=0X6,7,yD,5,0X00002,dD,0,0x1,0X000e,iD,12,0XD,zD,11,QD,0X09},{[0]=7,6,0X5,0X4,3,0X0002,1,0x00,0Xf,14,0x0000d,0XC,vD,10,0x9,8},{[0X0]=0X8,0x9,0xA,0x00B,0xC,13,14,0x0F,0,1,0X2,3,0X0004,0X5,0X6,7},{[0X0]=0x9,8,0XB,0x00A,0x0000d,12,0XF,0xE,1,0,3,2,5,4,7,6},{[WD]=0Xa,11,8,rD,14,15,0XC,13,0x2,dD,0,1,hD,7,0X004,5},{[0]=0Xb,0x0a,9,0X8,15,14,0xd,12,0x3,2,1,WD,0X7,6,0X5,0x4},{[0]=0XC,13,14,iD,8,9,0xA,0xB,4,0x5,0x0006,7,0X0,1,2,3},{[0X0]=LD,bD,0X0F,14,9,0X08,11,0X00A,5,yD,7,0X0006,1,0X000,3,2},{[0]=0XE,0X0000F,0Xc,0xd,0x0000A,11,QD,9,0X00006,7,0X4,0X5,0X2,0X3,0,0X00001},{[0X00]=15,14,13,0X0000c,0x0B,10,0X9,8,0X007,hD,5,4,3,0X2,0X1,0x0}};do FI=0;end;end;end;else if FI<=0 then do h=(y and y()or RD);end;FI=0X0004;else if FI==1 then i="LPH}else cD={};do FI=0x0006;end;end;end;end;end;local o=(nil);i=K(T(i,5),XD,function(jI)if k(jI,0x2)==0X48 then o=D(T(jI,1,1));return"";else local o8=(w(D(jI,16)));if o then local rx,Yx=0X0001,(nil);while rx~=0X2 do do if rx~=0 then Yx=I(o8,o);rx=0x00000;else o=nil;rx=0x2;end;end;end;return Yx;else return o8;end;end;end);FI=3;local d,W,V,r=nil,nil,nil,nil;while'\045m\060\109\096\105 8'do if not(FI<=0X1)then do if FI~=0X2 then do d=function()local aE=nil;local KE=0X0;while(true)do if KE==0 then aE=k(i,v,v);KE=0X1;else v=v+1;break;end;end;return aE;end;end;FI=0X0;else do V=W-0X00001;end;FI=1;end;end;else if FI==0x00000 then do W=0X00080000000;end;FI=0X2;else r=JD or uD;break;end;end;end;local R=(L-1);local z=function()local kl,cl,Cl,Ql,sl=0,nil,nil,nil,(nil);do repeat if kl<=0X00000 then do cl,Cl,Ql,sl=k(i,v,v+3);end;kl=0X2;else if kl==1 then do return sl*jD+Ql*65536+Cl*0X00100+cl;end;else v=v+4;kl=0X001;end;end;until false;end;end;do local XH=(0);local oH=(nil);do repeat if XH==0x00 then oH=0x002;do XH=1;end;else do for Jg=0x00001,31 do X[Jg]=oH;oH=oH*2;end;end;XH=0X2;end;until XH==2;end;end;FI=0;local J,FD=nil,nil;while FI<=1 do if FI==0 then J=function(l3,r3,Z3)local T3=(0X0002);local P3=(nil);while'\079\059<'do if not(T3<=0)then if T3~=1 then P3=(l3/X[r3])%X[Z3];T3=0X0;else do return P3;end;end;else do P3=P3-P3%1;end;T3=0x1;end;end;end;FI=0X1;else FD={};FI=0x00002;end;end;local u=function()local dP,yP=z(),(z());if yP>=W then yP=yP-L;end;do return yP*L+dP;end;end;local j=function()local i_=(0);local H_,W_,U_,o_,n_,Q_=nil,nil,nil,nil,nil,nil;do while i_~=7 do if not(i_<=2)then if i_<=4 then if i_~=3 then U_=(-1)^J(W_,31,1);do i_=0X1;end;else do if H_==0 and W_==0 then do return WD;end;end;end;i_=0X4;end;else if i_==0x05 then W_=z();i_=3;else n_=J(W_,0X00000,0X000014)*L+H_;i_=0X00002;end;end;else if i_<=0 then H_=z();i_=0x5;else if i_==0X01 then o_=J(W_,0x0014,11);i_=6;else Q_=0x1;i_=0x7;end;end;end;end;end;for nf=0X0000,0X1 do if nf~=0X00000 then return U_*(2^(o_-1023))*(n_/b+Q_);else do if o_==0 then if n_~=0 then for FJ=0X0,1 do do if FJ==0X00000 then o_=1;else Q_=WD;end;end;end;else do return U_*0;end;end;else if o_==2047 then if n_==0X0 then return U_*(0/0);else do return U_*(1/0);end;end;end;end;end;end;end;end;local e=((bit or bit32));local B=e and e.bxor or function(Sl,Il)local nl,jl=0X00000,nil;do while nl<2 do if nl~=0 then jl=0x001;do nl=0X2;end;else do Sl=Sl%L;end;nl=0x001;end;end;end;nl=0X00002;local Ll=nil;do while 0.7400382972663226 do if not(nl<=1)then if nl==2 then Il=Il%L;nl=0;else while Sl>WD and Il>0 do local G6,u6=nil,nil;do for gM=0X0,0X0001 do if gM==0 then G6=Sl%16;else u6=Il%0X10;end;end;end;local j6=(2);while"\073\109q}"do do if j6<=1 then if j6==0 then do Il=(Il-u6)/16;end;do j6=1;end;else do jl=jl*16;end;break;end;else if j6~=2 then Sl=(Sl-G6)/16;j6=0;else Ll=Ll+G[G6][u6]*jl;j6=3;end;end;end;end;end;nl=0X1;end;else do if nl==0x0000 then Ll=0;do nl=3;end;else return Ll+Sl*jl+Il*jl;end;end;end;end;end;end;local q=(e and e[GD]or function(rx,ix)local Tx=0x1;do while true do do if Tx<=0X0 then ix=ix%L;Tx=0X2;else if Tx~=0X1 then return((rx+ix)-B(rx,ix))/0X002;else do rx=rx%L;end;do Tx=0;end;end;end;end;end;end;end);local Z=e and e[eD]or function(sH,PH)local EH=0;do while true do if not(EH<=0x00)then if EH~=1 then do PH=PH%L;end;EH=1;else return R-q(R-sH,R-PH);end;else do sH=sH%L;end;EH=0X0002;end;end;end;end;local x,E=e and e[BD]or function(lU)return R-(lU%L);end,e and e[qD];local C=(e and e.rshift);do E=E or function(Dw,lw)for Rg=0X000,0x2 do if not(Rg<=0)then if Rg~=1 then do return(Dw*X[lw])%L;end;else if not(lw<0)then else return C(Dw,-lw);end;end;else if lw>=ZD then return WD;end;end;end;end;end;do FI=0X0;end;local l=nil;while FI~=2 do if FI~=0 then l=xD;FI=2;else C=C or function(Fh,jh)local Ch=(0X00003);local eh=(nil);while true do if Ch<=0X00001 then do if Ch~=0 then return eh-eh%0X1;else do eh=(Fh%L/X[jh]);end;Ch=1;end;end;else do if Ch~=2 then do if jh>=32 then do return 0;end;end;end;do Ch=0X00002;end;else do if not(jh<0)then else return E(Fh,-jh);end;end;Ch=0;end;end;end;end;end;FI=1;end;end;FI=0X0;local s,N,g=nil,nil,nil;repeat if not(FI<=0x0)then do if FI==1 then N=function()local bU=(0X0);local UU=(0x00);while 0X5749b2A do local cX=(k(i,v,v));do v=v+0X001;end;UU=Z(UU,E(q(cX,127),bU));if q(cX,128)==0 then return UU;end;do bU=bU+0X7;end;end;end;FI=2;else g=CD;break;end;end;else s={[0x03]=0X4,[2]=ED,[8]=0X00009,[0X1]=5,[0X8]=9,[0X07]=hD,[QD]=9,[yD]=0x0};FI=1;end;until false;local U=(d());local MD=(d());local Y=(function()local Wu=N();do if not(Wu>V)then else return Wu-L;end;end;return Wu;end);local OD=function(r5)local o5,k5,n5=nil,nil,(nil);local S5=1;while S5~=3 do if S5<=0 then n5=B(o5[2],MD);S5=0X3;else if S5~=0X1 then do k5=B(o5[HD],MD);end;S5=0;else o5={k(i,v,v+0X00003)};S5=2;end;end;end;local m5=(B(o5[0X3],MD));local c5=B(o5[0X004],MD);for b4=0,2 do do if not(b4<=0X0)then if b4==1 then v=v+4;else return c5*0X1000000+m5*0X10000+n5*0X0000100+k5;end;else do MD=(sD*MD+r5)%256;end;end;end;end;end;FI=0;local nD,DD=nil,nil;do while 0.22002725605251916 do do if FI==0 then nD=function(...)return O("#",...),{...};end;FI=0X0001;else do DD=function(j_)local z_,l_=nil,nil;for ug=0,0X2 do if ug<=0X0 then z_=z();elseif ug~=1 then for Vx=0X1,z_,YD do local px=(0x2);local yx,zx=nil,nil;do while(true)do if px<=1 then if px~=0 then do if yx>z_ then yx=z_;end;end;px=0x03;else for Zd=0x1,#zx do local Ad=(1);do while Ad<=1 do if Ad~=0 then zx[Zd]=B(zx[Zd],U);Ad=0X0;else U=(j_*U+0X77)%256;Ad=2;end;end;end;end;px=4;end;else if not(px<=0x2)then if px==3 then zx={k(i,v+Vx-0X1,v+yx-1)};px=0;else l_=l_..w(r(zx));break;end;else yx=Vx+7997-HD;px=0x1;end;end;end;end;end;else l_=ND;end;end;local G_=(0X0);while true do if G_==0X0 then v=v+z_;do G_=1;end;else return l_;end;end;end;end;break;end;end;end;end;FI=6;local SD,pD,TD,kD=nil,nil,nil,nil;while true do do if not(FI<=0X3)then if not(FI<=5)then do if FI==6 then SD=HD;FI=0x4;else function pD(N5,m5,U5)local v5,Q5,S5=U5[3],U5[7],U5[2];local G5,P5,W5,q5=U5[5],U5[0X9],U5[0x8],(U5[0x006]);local y5=(U5[1]);local f5=(f({},{__mode="v"}));local r5=(nil);r5=function(...)local Xf=(0x1);local Mf=(0X0000);local Rf=((y and y()or _ENV));local Sf=(Rf==h and m5 or Rf);local tf={};local uf,zf=nD(...);do uf=uf-1;end;for Fa=0,uf do if Q5>Fa then(tf)[Fa]=zf[Fa+1];else break;end;end;cD[0X00001]=U5;(cD)[2]=tf;if not P5 then zf=nil;elseif not(W5)then else do tf[Q5]={n=uf>=Q5 and uf-Q5+1 or 0,r(zf,Q5+0x1,uf+1)};end;end;if Sf~=Rf then if not(t)then do _ENV=Sf;end;else t(r5,Sf);end;end;local Ef,cf,nf,ef=F(function()while true do local s1=(y5[Xf]);local m1=s1[6];Xf=Xf+1;if m1<0X2b then if m1>=0X15 then if m1<0X000020 then do if m1>=0X00001a then if m1<29 then if m1<27 then tf[s1[1]]=nil;else if m1~=28 then tf[s1[0x1]][s1[4]]=s1[0X7];else(tf)[s1[0x1]]=tf[s1[0X3]]~=s1[0x7];end;end;else if not(m1<0x1e)then if m1~=0x01f then local jS=(s1[1]);tf[jS](tf[jS+0X1]);Mf=jS-0x00001;else local QL=(nil);local PL=(v5[s1[0x03]]);local jL=PL[0X00004];local kL=#jL;if kL>0x0 then QL={};for Yo=1,kL do local uo=(jL[Yo]);if uo[0X01]~=0x00 then do QL[Yo-0X1]=N5[uo[0X2]];end;else(QL)[Yo-0X0001]={tf,uo[2]};end;end;(a)(f5,QL);end;do tf[s1[1]]=pD(QL,Sf,PL);end;end;else local CA=N5[s1[0X3]];(CA[1])[CA[2]]=tf[s1[1]];end;end;else if not(m1<0X17)then if m1>=0x0018 then if m1==25 then do if s1[2]==146 then Xf=Xf-1;do(y5)[Xf]={[1]=(s1[0X1]-85),[0X6]=0x37,[3]=(s1[0X3]-85)};end;else repeat local gq,Uq=f5,(tf);if not(#gq>0)then else local sh=({});for Sp,pp in A,gq do for ww,Gw in A,pp do if not(Gw[0X1]==Uq and Gw[0X2]>=0x00)then else local ri=(Gw[0X2]);do if not sh[ri]then(sh)[ri]={Uq[ri]};end;end;(Gw)[0x01]=sh[ri];Gw[2]=0X00001;end;end;end;end;until true;return;end;end;else local OT=s1[1];do(tf)[OT]=tf[OT](tf[OT+1]);end;do Mf=OT;end;end;else if not(not tf[s1[0X0001]])then else Xf=s1[0X003];end;end;else if m1~=0X000016 then if tf[s1[0X003]]<=tf[s1[0X2]]then Xf=s1[1];end;else local dr=(s1[1]);tf[dr]=tf[dr](r(tf,dr+1,Mf));Mf=dr;end;end;end;end;else if m1>=37 then if not(m1>=40)then if m1<38 then(tf)[s1[0X1]]=tf[s1[3]]*tf[s1[0x02]];else if m1==39 then local V3=s1[3];tf[s1[0X1]]=tf[V3]..tf[V3+1];else do if not(not(tf[s1[0X03]]<=s1[7]))then else Xf=s1[1];end;end;end;end;else if not(m1>=0X29)then(tf)[s1[0X1]]=#tf[s1[3]];else if m1==0x2a then local C2=s1[1];local U2=(g(function(...)Q();for oY,lY in...do Q(true,oY,lY);end;end));U2(tf[C2],tf[C2+1],tf[C2+0X0002]);Mf=C2;(tf)[C2]=U2;Xf=s1[0X03];else do(tf)[s1[1]]=false;end;end;end;end;else do if m1>=0x22 then if m1>=35 then if m1==36 then local kW,gW=s1[0X0001],(tf[s1[0X3]]);(tf)[kW+0X1]=gW;do(tf)[kW]=gW[s1[0X7]];end;else do(tf)[s1[1]]=q(tf[s1[3]],tf[s1[2]]);end;end;else tf[s1[0X1]]=C(tf[s1[3]],tf[s1[0X2]]);end;else if m1~=33 then(tf)[s1[0X1]]=tf[s1[0X3]];else do for l5=s1[1],s1[3]do do(tf)[l5]=nil;end;end;end;end;end;end;end;end;else if m1<10 then if m1>=0X5 then do if m1<0x7 then if m1~=0X0006 then tf[s1[1]]={};else local a7=(s1[3]);local V7=(tf[a7]);for Bz=a7+1,s1[2]do V7=V7..tf[Bz];end;tf[s1[0X1]]=V7;end;else if m1>=8 then if m1~=9 then Mf=s1[1];do(tf)[Mf]=tf[Mf]();end;else tf[s1[1]]=tf[s1[3]][tf[s1[0x002]]];end;else(cD)[s1[0X3]]=tf[s1[1]];end;end;end;else if m1>=0x02 then if m1<3 then(tf)[s1[0x1]]=tf[s1[3]]^tf[s1[0X2]];else if m1~=4 then(tf)[s1[0X1]]=tf[s1[0X3]]>=tf[s1[0X00002]];else do tf[s1[1]]=Z(tf[s1[3]],tf[s1[0X2]]);end;end;end;else if m1==0X1 then local yw=(s1[1]);local pw,Mw=tf[yw]();if not(pw)then else Xf=s1[3];do(tf)[yw+0X0003]=Mw;end;end;else if s1[0X002]~=0X7B then repeat local Ls,Ks=f5,(tf);if not(#Ls>0X0)then else local Eo={};for YI,TI in A,Ls do for WX,ZX in A,TI do if not(ZX[1]==Ks and ZX[2]>=0X0)then else local Cv=(ZX[0X002]);if not(not Eo[Cv])then else Eo[Cv]={Ks[Cv]};end;ZX[0X1]=Eo[Cv];(ZX)[0X2]=0X0001;end;end;end;end;until true;local T4=s1[0X1];do return false,T4,T4;end;else Xf=Xf-1;do(y5)[Xf]={[0X1]=(s1[1]-248),[0X6]=0x37,[0x03]=(s1[3]-0Xf8)};end;end;end;end;end;else if m1>=0X0f then do if not(m1>=18)then if m1>=0X10 then do if m1==17 then Mf=s1[0X00001];(tf[Mf])();Mf=Mf-1;else(tf)[s1[1]]=B(tf[s1[0X3]],tf[s1[2]]);end;end;else if s1[2]~=0X7F then if not(tf[s1[0x1]])then else do Xf=s1[3];end;end;else Xf=Xf-1;y5[Xf]={[0X0003]=(s1[0X3]-5),[0x0006]=0x0000c,[1]=(s1[1]-0x0005)};end;end;else do if m1<19 then tf[s1[0x1]]=tf[s1[0X0003]]-tf[s1[2]];else do if m1==0X14 then tf[s1[1]][s1[0X4]]=tf[s1[0X2]];else(tf)[s1[0x1]]=tf[s1[3]]~=tf[s1[0x2]];end;end;end;end;end;end;else do if m1>=0Xc then if not(m1>=13)then if s1[2]==0X00C6 then Xf=Xf-1;y5[Xf]={[3]=(s1[0X003]-222),[1]=(s1[1]-222),[0X6]=25};else repeat local NC,FC=f5,tf;if#NC>0 then local N8=({});for jy,Vy in A,NC do for yr,kr in A,Vy do if kr[1]==FC and kr[0x2]>=0X0 then local Bm=(kr[0X2]);if not N8[Bm]then do N8[Bm]={FC[Bm]};end;end;(kr)[0X0001]=N8[Bm];kr[2]=1;end;end;end;end;until true;return false,s1[0X1],Mf;end;else if m1==14 then local uo=s1[1];local co=(s1[2]-0X1)*0x32;local qo=tf[uo];for Q6=1,s1[0X0003]do(qo)[co+Q6]=tf[uo+Q6];end;else(tf)[s1[0X1]]=tf[s1[3]]%s1[0X00007];end;end;else do if m1==0XB then(tf)[s1[1]]=tf[s1[3]]<tf[s1[0X00002]];else do tf[s1[1]]=tf[s1[3]]%tf[s1[0X00002]];end;end;end;end;end;end;end;end;else if m1>=64 then if not(m1<0X0004B)then if not(m1>=80)then if m1<0X004d then if m1==76 then tf[s1[1]][tf[s1[0X3]]]=tf[s1[2]];else local bU=(s1[1]);local qU=(g(function(...)Q();for YH,SH,GH,RH,bH,yH,tH,sH,fH,BH in...do(Q)(true,{YH,SH,GH,RH,bH,yH,tH,sH,fH,BH});end;end));qU(tf[bU],tf[bU+0x001],tf[bU+0X2]);Mf=bU;(tf)[bU]=qU;Xf=s1[3];end;else if m1>=0X4E then if m1==79 then(tf)[s1[1]]=s1[0X0004];else do if tf[s1[3]]<tf[s1[0X02]]then Xf=s1[1];end;end;end;else do if tf[s1[0x0003]]==s1[7]then Xf=s1[1];end;end;end;end;else if not(m1>=83)then if not(m1<0X000051)then if m1~=82 then repeat local F1,O1=f5,tf;do if not(#F1>0)then else local Ze=({});for ZJ,bJ in A,F1 do for ZY,BY in A,bJ do if not(BY[1]==O1 and BY[0X2]>=0x00)then else local ek=BY[0X2];if not Ze[ek]then(Ze)[ek]={O1[ek]};end;(BY)[0x1]=Ze[ek];(BY)[2]=0X1;end;end;end;end;end;until true;return true,s1[0X0001],0;else local iB=s1[0x1];local fB,oB=tf[iB]();do if fB then do(tf)[iB+0X001]=oB;end;do Xf=s1[0X3];end;end;end;end;else local VH=s1[1];tf[VH](tf[VH+0X1],tf[VH+0x2]);Mf=VH-1;end;else if m1>=0x54 then if m1~=85 then local zW=s1[1];(tf[zW])(r(tf,zW+1,Mf));Mf=zW-1;else tf[s1[0X00001]]=true;end;else(tf)[s1[1]]=tf[s1[0X3]]<=tf[s1[0X002]];end;end;end;else if m1<69 then if m1>=66 then if not(m1<67)then if m1~=0X44 then(Sf)[s1[4]]=tf[s1[0X1]];else local rI=N5[s1[3]];(tf)[s1[1]]=rI[1][rI[2]];end;else local j5=s1[0X1];local V5=(g(function(...)Q();for Y3 in...do Q(true,Y3);end;end));V5(tf[j5],tf[j5+0X01],tf[j5+0X00002]);Mf=j5;(tf)[j5]=V5;Xf=s1[3];end;else if m1~=0X41 then repeat local jJ,AJ=f5,(tf);do if#jJ>0 then local YC=({});for DZ,iZ in A,jJ do for PV,uV in A,iZ do if uV[1]==AJ and uV[0x2]>=0X0000 then local iE=uV[0X2];if not(not YC[iE])then else(YC)[iE]={AJ[iE]};end;uV[1]=YC[iE];uV[2]=1;end;end;end;end;end;until true;return true,s1[0X01],0X1;else local bI=s1[0X003];local jI=(s1[1]);do Mf=jI+bI-0X1;end;repeat local Fx,hx=f5,tf;if not(#Fx>0)then else local Ql=({});for qr,Mr in A,Fx do for Zi,Hi in A,Mr do if not(Hi[1]==hx and Hi[0X002]>=0)then else local vQ=Hi[0x0002];if not(not Ql[vQ])then else(Ql)[vQ]={hx[vQ]};end;do Hi[1]=Ql[vQ];end;(Hi)[0x2]=1;end;end;end;end;until true;return true,jI,bI;end;end;else if not(m1>=0x48)then if m1>=0X46 then if m1~=0x00047 then do(tf)[s1[1]]=Sf[s1[4]];end;else local UN=(s1[0X01]);local PN,fN,nN=tf[UN],tf[UN+0X1],tf[UN+2];tf[UN]=g(function()for fU=PN,fN,nN do(Q)(true,fU);end;end);Xf=s1[0x3];end;else tf[s1[0x1]]=-tf[s1[0x3]];end;else if not(m1>=0X000049)then local gU=s1[1];local CU,JU,vU=tf[gU]();if CU then(tf)[gU+0x1]=JU;(tf)[gU+2]=vU;do Xf=s1[3];end;end;else if m1==0X0004A then repeat local P_,J_,D_=f5,tf,s1[0X00001];do if#P_>0 then local F9=({});for XN,yN in A,P_ do for cr,pr in A,yN do if pr[1]==J_ and pr[0X02]>=D_ then local bB=(pr[0X2]);if not F9[bB]then(F9)[bB]={J_[bB]};end;do(pr)[1]=F9[bB];end;pr[2]=1;end;end;end;end;end;until true;else(tf)[s1[1]]=tf[s1[0X003]]>tf[s1[2]];end;end;end;end;end;else if m1>=53 then if m1<58 then if m1<0X37 then if m1==54 then local fh=(s1[0X001]);do Mf=fh+s1[0X03]-0X1;end;(tf[fh])(r(tf,fh+1,Mf));do Mf=fh-0X1;end;else do if not(not(tf[s1[3]]<=tf[s1[0x002]]))then else Xf=s1[0x1];end;end;end;else do if m1<0x38 then if s1[0x2]~=147 then local Oj,zj=uf-Q5,s1[0X1];if not(Oj<0)then else do Oj=-1;end;end;for Vp=zj,zj+Oj do(tf)[Vp]=zf[Q5+(Vp-zj)+1];end;Mf=zj+Oj;else do Xf=Xf-1;end;do(y5)[Xf]={[0X3]=(s1[3]-16),[0x00006]=25,[1]=(s1[1]-0X00010)};end;end;else if m1==57 then Xf=s1[3];else if tf[s1[0X3]]~=tf[s1[2]]then else Xf=s1[0X1];end;end;end;end;end;else do if not(m1>=61)then if m1<59 then do if tf[s1[0X3]]==tf[s1[0X2]]then else do Xf=s1[0x1];end;end;end;else if m1~=60 then local qm=(s1[1]);local Vm,um=tf[qm]();if Vm then do for sX=0X01,s1[2]do(tf)[qm+sX]=um[sX];end;end;Xf=s1[3];end;else tf[s1[0X1]]=tf[s1[3]]+tf[s1[2]];end;end;else if m1<62 then local ho=(s1[2]-1)*0x32;local So=s1[0X1];local Ko=tf[So];do for iG=1,Mf-So do Ko[ho+iG]=tf[So+iG];end;end;else if m1==0X3F then tf[s1[0X1]]=tf[s1[0X03]]==tf[s1[2]];else local Zv=s1[0X1];(tf)[Zv]=tf[Zv](tf[Zv+1],tf[Zv+2]);do Mf=Zv;end;end;end;end;end;end;else do if not(m1<48)then do if not(m1>=50)then if m1==49 then if s1[0x2]~=97 then do(tf)[s1[1]]=not tf[s1[0X3]];end;else do Xf=Xf-0X1;end;do y5[Xf]={[3]=(s1[0X3]-92),[0x00006]=0X19,[1]=(s1[0x1]-92)};end;end;else local Os=s1[1];local hs=(s1[3]);if hs==0 then else do Mf=Os+hs-1;end;end;local fs,xs,Ys=s1[0X0002],nil,(nil);if hs==0x1 then xs,Ys=nD(tf[Os]());else xs,Ys=nD(tf[Os](r(tf,Os+1,Mf)));end;if fs~=1 then if fs~=0 then do xs=Os+fs-2;end;Mf=xs+0X1;else xs=xs+Os-0x1;Mf=xs;end;local qO=(0X0);do for tE=Os,xs do qO=qO+1;tf[tE]=Ys[qO];end;end;else Mf=Os-0X1;end;end;else do if m1<51 then local xV=(s1[0X0001]);do for O6=xV,xV+(s1[3]-0X00001)do do(tf)[O6]=zf[Q5+(O6-xV)+0x00001];end;end;end;else if m1~=52 then if s1[2]~=184 then do repeat local oM,TM=f5,tf;if#oM>0 then local cH=({});do for dI,gI in A,oM do for pO,AO in A,gI do if AO[1]==TM and AO[2]>=0 then local rt=(AO[0x0002]);if not cH[rt]then(cH)[rt]={TM[rt]};end;do(AO)[0X01]=cH[rt];end;AO[2]=0X1;end;end;end;end;end;until true;end;local OA=(s1[1]);return false,OA,OA+s1[0X03]-0X2;else Xf=Xf-0X1;(y5)[Xf]={[0X3]=(s1[0x00003]-108),[1]=(s1[0x1]-0x6c),[6]=40};end;else tf[s1[0X1]]=tf[s1[0x3]]/tf[s1[0X2]];end;end;end;end;end;else if m1<0x2D then if m1~=0x0002c then if tf[s1[3]]==s1[0X00007]then else do Xf=s1[1];end;end;else(tf)[s1[1]]=tf[s1[3]][s1[7]];end;else if not(m1<46)then if m1~=47 then do tf[s1[0X1]]={r({},0X1,s1[0X3])};end;else tf[s1[0X1]][tf[s1[3]]]=s1[0X7];end;else do(tf)[s1[1]]=cD[s1[0x3]];end;end;end;end;end;end;end;end;end;end);if not(Ef)then if S(cf)=="\115\116r\105\110g"then if not(m(cf,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if m(cf,'^.-\058%d+: ')then p("\076\117r\097\112\104\032\083\099ri\112\116:"..(G5[Xf-1]or"(internal)")..'\058 '..c(cf),0);else p(cf,0);end;end;else p(cf,0);end;else if cf then if ef~=1 then return tf[nf](r(tf,nf+0X1,Mf));else return tf[nf]();end;elseif nf then return r(tf,nf,ef);end;end;end;if t then t(r5,m5);end;do return r5;end;end;FI=0X00001;end;end;else if FI==0X4 then FI=7;else do return pD(nil,h,kD)(...);end;end;end;else do if not(FI<=1)then do if FI==0X00002 then do kD=TD();end;FI=0X000;else FD=UD;FI=0x5;end;end;else do if FI~=0 then function TD()local TX,OX,MX,fX=2,nil,nil,nil;while TX~=0X4 do if not(TX<=1)then if TX~=0X2 then MX={};TX=0X00;else TX=1;end;else if TX==0 then fX=HD;TX=0x00004;else do OX={};end;TX=3;end;end;end;local FX={{},nil,{},UD,{},UD,UD,UD,UD};local BX=({});TX=0x0;local mX,cX,gX=nil,nil,(nil);repeat if TX<=1 then if TX==0 then mX=z()-0Xc84;TX=3;else gX=d()~=0;TX=0X2;end;else if TX==2 then for Yw=1,mX do local Uw,Ew=nil,(nil);for kt=0X00000,2 do if not(kt<=0X0000)then do if kt==1 then Ew=d();else do MX[Yw-1]=fX;end;end;end;else Uw=UD;end;end;if Ew==0X12 then Uw=T(DD(cX),3);elseif Ew==0x0030 then Uw=T(DD(cX),d());elseif Ew==0XD5 then Uw=u();elseif Ew==MI then Uw=u();elseif Ew==0X00089 then do Uw=T(DD(cX),j()+z());end;elseif Ew==191 then Uw=j();elseif Ew==69 then Uw=OI;elseif Ew==224 then Uw=DI;elseif Ew~=132 then else do Uw=j();end;end;local kw,uw={Uw,{}},0;do repeat if uw~=0X0 then fX=fX+0X1;uw=2;else do BX[fX]=kw;end;do uw=0X001;end;end;until uw==2;end;if not(gX)then else(FD)[SD]=kw;SD=SD+0x1;end;end;break;else do cX=d();end;TX=0X1;end;end;until false;TX=0X00001;local rX=(nil);while TX<=0x00005 do do if not(TX<=0X2)then do if not(TX<=3)then if TX==4 then rX=z();TX=2;else(FX)[0X0004]=OX;do TX=0X0000;end;end;else(FX)[14]=z();TX=6;end;end;else if not(TX<=0X00000)then if TX~=1 then for dZ=0X1,rX do local uZ=(z());local NZ=z();local rZ=(nil);for pT=0,1 do if pT~=0X0 then do for Mc=uZ,NZ do(FX[oD])[Mc]=rZ;end;end;else rZ=z();end;end;end;TX=5;else FX[2]=N();TX=0X00004;end;else for Rx=1,N()do do(OX)[Rx]={d(),N()};end;end;do TX=0x3;end;end;end;end;end;TX=0;local RX=(nil);while true do if TX==0X0 then FX[7]=N();TX=1;else RX=z()-0X00113bf;do break;end;end;end;local bX=(FX[1]);for q8=0X1,RX do bX[q8]={[4]=d(),[hD]=N(),[0X1]=Y(),[0X3]=Y(),[oD]=d(),[7]=d(),[0x2]=Y()};end;TX=3;local NX,vX,PX=nil,nil,nil;while TX<=9 do if not(TX<=0x4)then if not(TX<=0x006)then if TX<=0X7 then(FX)[0x8]=J(NX,2,1)~=0;TX=0X4;elseif TX~=0x08 then(FX)[0X9]=J(NX,0x0001,0X1)~=0X0;TX=7;else NX=d();TX=9;end;else if TX~=0X00005 then FX[10]=z();TX=0X0;else vX=FX[3];TX=0X1;end;end;else if not(TX<=1)then if not(TX<=0X00002)then if TX==3 then do(FX)[16]=d();end;TX=6;else FX[0X11]=z();TX=0X2;end;else FX[0Xc]=z();TX=0X005;end;else if TX==0 then(FX)[19]=d();TX=0x8;else do PX=z()-0X0F388;end;TX=10;end;end;end;end;for Jf=0,PX-1 do(vX)[Jf]=TD();end;do(FX)[0x006]=N();end;do for mV=1,RX do local MV=FX[1][mV];for Mb,sb in nI(H)do local Gb,Rb=s[sb],(nil);do for jm=0X0000,1 do if jm==0X0000 then Rb=MV[Gb];elseif Rb==0X000b then local Hw,Qw=1,nil;local Bw=MX[MV[sb]];repeat if Hw~=0 then Qw=BX[Bw];Hw=0;else if not(Qw)then else MV[Gb]=Qw[0x0001];local QG=nil;for vy=0,0X01 do do if vy~=0 then do QG[#QG+1]={MV,Gb};end;else QG=Qw[2];end;end;end;end;Hw=0x2;end;until Hw>0X1;elseif Rb~=0Xe then else do(MV)[sb]=mV+MV[sb]+0X01;end;end;end;end;end;end;end;do FX[iD]=z();end;do return FX;end;end;do FI=2;end;else cD[4]=FD;FI=0X00003;end;end;end;end;end;end;end;end)(4,29,0X7,0,next,3,"lshi\102\116",assert,table.unpack,false,string.byte,73,12,0Xa,tonumber,string.sub,15,9,0x1000000,unpack,"",7997,ipairs,table.insert,string.char,nil,"\098\110\111t",pcall,0x001,'\098or',0X00e,32,0x8,_ENV,string.rep,'\098\097\110d',coroutine.wrap,'\046\046',rawget,0xB,0Xd,6,true,0X005,string.match,coroutine.yield,...);
