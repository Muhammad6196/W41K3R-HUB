-- This file was generated using Luraph Obfuscator v13.5.4

return(function(mL,wL,zL,hL,SL,LL,sL,QL,iL,bL,jL,NL,YL,ZL,TL,pL,yL,aL,AL,BL,DL,ML,xL,GL,cL,oL,OL,fL,FL,VL,UL,gL,eL,KL,RL,PL,vL,IL,rL,qL,...)local k,H,u,Z=OL,tostring,ZL.sub,ZL.rep;local E=(select);local r=(0x00001);local JL,O,W,d,a=2,nil,nil,nil,nil;while JL~=0X4 do if JL<=0x1 then if JL~=0 then d=aL;JL=0;else a=ZL.gsub;do JL=4;end;end;else do if JL~=0X2 then do W=ZL.byte;end;JL=1;else O=string.char;JL=3;end;end;end;end;local z,i=nil,nil;local c,N=cL,setmetatable;local t=(tonumber);for fJ=0X0,1 do if fJ==0X0000 then z=yL;else i=coroutine.wrap;end;end;local B=(unpack or NL);JL=0;local S=nil;do repeat do if JL~=0 then do S=GL;end;JL=2;else JL=1;end;end;until JL>=2;end;JL=0;local G,q=nil,nil;repeat do if JL==0x00000 then G=zL;do JL=0X00001;end;else q=0X0000100000000;JL=2;end;end;until JL>1;local m=(S and S()or hL);local R=nil;do for mC=0X0,0X001 do if mC~=0X0 then else do R={[0X00]={[0]=0X0000,iL,2,0X3,0X0004,0X5,6,0X7,8,9,10,0X0b,0Xc,13,14,15},{[0]=0x01,0X0,0X3,0X002,0X5,4,0x7,gL,9,8,11,0XA,13,12,15,14},{[BL]=0X2,0x3,0x0,1,6,7,4,0X0005,0XA,VL,0X008,0X9,14,15,12,13},{[0]=3,2,iL,0X0,SL,6,5,4,11,10,9,0x8,15,14,0X000d,0Xc},{[0]=4,5,0X6,7,0,0X1,0x02,3,0XC,13,14,15,8,0x09,0Xa,0xB},{[0X00000]=mL,0X00004,0X7,6,0x1,0X00,3,0X0002,13,12,15,0X0E,9,0X008,0x0000b,0x00a},{[0X0]=6,7,0X4,0X00005,0X2,3,BL,1,0X00e,0Xf,12,0Xd,10,0X000B,8,rL},{[0]=0X7,0X0006,mL,4,AL,0X2,iL,0X0,0Xf,14,0XD,0X0000c,11,0X0000a,0x009,8},{[0x0]=0X8,0X9,wL,11,0xc,13,14,15,0,0X01,2,0X00003,4,0X5,0X00006,7},{[0]=9,8,0Xb,0x000A,13,0Xc,15,14,1,0,3,0X0002,5,0X4,0x7,0x6},{[0]=10,11,0X8,9,bL,0x0F,pL,13,2,AL,0X0,0X1,0x0006,0X7,4,5},{[0]=11,0XA,0x9,0X008,15,0x000E,13,0X000c,3,2,0X1,0X0,0X07,6,0x5,QL},{[0]=0Xc,qL,14,TL,8,0X9,10,0XB,4,5,0x006,0x00007,0,0X1,2,0X3},{[0]=0X00d,12,0xf,0X0e,9,8,11,10,0X5,0X4,0X00007,6,0X0001,0,3,0x2},{[BL]=14,0X0F,12,13,0xA,11,0x8,9,0X006,0X7,4,5,2,0x3,0,0X01},{[0]=TL,0X0000E,0Xd,pL,VL,10,rL,0X8,7,6,5,0x4,3,0X00002,1,0X0}};end;end;end;end;local h,v,l=next,{[0]=1},(vL);local X,A,e,w=eq-0x1,nil;local b,Q,p,T,K,y,Y,M,D,g=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil;local F=(bit or KL);for N7=0,11 do do if not(N7<=0x5)then if N7<=8 then if N7<=6 then do local h7=(nil);for dR=0X0,1 do if dR~=0x000 then do for HQ=1,0X1f do local lQ=(0X1);repeat do if lQ~=0X0 then do v[HQ]=h7;end;do lQ=0X0;end;else h7=h7*2;lQ=0x00002;end;end;until lQ==2;end;end;else h7=2;end;end;end;else if N7~=7 then Y=function()local By,Ky=nil,(nil);for nJ=0,2 do if nJ<=0 then By,Ky=p(),p();elseif nJ~=1 then return Ky*q+By;else do if not(Ky>=Q)then else Ky=Ky-q;end;end;end;end;end;else do y=RL;end;end;end;else if N7<=9 then M=function(fT,lT,AT)local wT=(fT/v[lT])%v[AT];wT=wT-wT%1;return wT;end;else if N7==0Xa then D=function()local dR,hR,LR,ER,IR,mR,AR=0,nil,nil,nil,nil,nil,nil;repeat if not(dR<=0X3)then do if dR<=5 then do if dR==4 then do ER=1;end;dR=2;else do if mR==0X00 then if AR==BL then return IR*0;else mR=0x1;ER=0X0;end;elseif mR~=2047 then else do if AR~=0 then return IR*(1/0x0);else return IR*(BL/0);end;end;end;end;dR=0X00008;end;end;else if dR==0X00006 then LR=p();dR=0x7;else if not(hR==0 and LR==0x0)then else return 0X0;end;dR=0X4;end;end;end;elseif dR<=0x1 then if dR==0X0 then do hR=p();end;dR=6;else AR=M(LR,0x0,20)*q+hR;dR=0X0005;end;else if dR~=0X2 then mR=M(LR,0X14,11);do dR=0x1;end;else IR=(-1)^M(LR,0X1F,1);dR=3;end;end;until dR==8;return IR*(0X2^(mR-FL))*(AR/T+ER);end;else g=oL;end;end;end;else do if not(N7<=2)then if not(N7<=0X3)then if N7~=4 then K=Q-iL;else T=0X00002^52;end;else p=function()local hk,Rk,Yk,ek,Zk=2,nil,nil,nil,nil;while true do if hk<=0 then do return Zk*DL+ek*65536+Yk*256+Rk;end;else do if hk~=0X1 then Rk,Yk,ek,Zk=W(A,r,r+3);hk=0x1;else r=r+QL;hk=0X0;end;end;end;end;end;end;else if N7<=0 then A=a(u(A,5),"..",function(vy)do if W(vy,0x02)==0X00048 then do w=t(u(vy,1,iL));end;do return ML;end;else local Tg=(nil);for Pn=0X000,1 do if Pn~=0 then if w then local IS,ZS=1,(nil);repeat if not(IS<=0X0)then if IS~=1 then w=nil;IS=0;else do ZS=Z(Tg,w);end;IS=0X2;end;else return ZS;end;until(false);else return Tg;end;else do Tg=O(t(vy,16));end;end;end;end;end;end);else do if N7~=1 then Q=YL;else b=function()local EH=(0X1);local SH=nil;while EH~=0X2 do do if EH==0 then do r=r+0x1;end;do EH=2;end;else SH=W(A,r,r);EH=0;end;end;end;return SH;end;end;end;end;end;end;end;end;end;local o=F and F.bxor or function(mw,xw)local nw,tw=nil,(nil);do for cl=0,5 do if cl<=2 then if not(cl<=0X00)then if cl~=0x1 then xw=xw%q;else nw=0x0001;end;else mw=mw%q;end;else if cl<=0X00003 then tw=0;else if cl~=0x4 then return tw+mw*nw+xw*nw;else while mw>0 and xw>0X0 do local UD,qD,ZD=mw%0X10,2,nil;while qD<=2 do if qD<=0 then tw=tw+R[UD][ZD]*nw;qD=1;else if qD==0X00001 then mw=(mw-UD)/16;do qD=0X3;end;else ZD=xw%jL;do qD=0;end;end;end;end;for w4=0,1 do if w4~=0X0 then nw=nw*0X10;else xw=(xw-ZD)/0X10;end;end;end;end;end;end;end;end;end;local j=F and F[UL]or function(yt,rt)for Mt=0,0X2 do if Mt<=0 then yt=yt%q;else if Mt==1 then rt=rt%q;else do return((yt+rt)-o(yt,rt))/2;end;end;end;end;end;local U=F and F.bor or function(Bw,Qw)local Hw=(1);repeat do if Hw<=0 then Qw=Qw%q;Hw=2;else if Hw==0x1 then do Bw=Bw%q;end;Hw=0;else return e-j(e-Bw,e-Qw);end;end;end;until(false);end;local I,s=F and F.bnot or function(Kw)do return e-(Kw%q);end;end,F and F.lshift;local HL=(1);local P=F and F.rshift;JL=0x0;local f=nil;repeat if JL<=0 then do f={0x002,0X3,iL};end;JL=0X001;elseif JL==1 then do s=s or function(Fx,Hx)for LW=0,0X002 do do if LW<=0X0 then do if Hx>=32 then return 0X00000;end;end;else if LW==1 then if Hx<0 then return P(Fx,-Hx);end;else return(Fx*v[Hx])%q;end;end;end;end;end;end;JL=2;else P=P or function(U_,m_)local f_,s_=0,(nil);while(true)do if not(f_<=1)then if f_~=0X0002 then if m_<0x0000 then return s(U_,-m_);end;f_=2;else do s_=(U_%q/v[m_]);end;f_=1;end;else if f_==0 then if not(m_>=0X000020)then else return 0;end;f_=0X03;else return s_-s_%0X0001;end;end;end;end;JL=3;end;until JL>=0X3;local L={[0X7]=0X08,[3]=0X04,[0X1]=0X5,[5]=0X02,[4]=gL,[0X00009]=9,[0X0004]=4,[2]=0X7,[5]=0X7,[0X7]=5};local x=(function()local BW=0X0;local FW=(0X00000);repeat local GU=W(A,r,r);r=r+0x01;do FW=U(FW,s(j(GU,127),BW));end;if j(GU,128)~=0x00 then else return FW;end;do BW=BW+7;end;until false;end);local C=b();local lL=({});local dL=(b());local EL,J,kL=nil,nil,(nil);for vV=0X0,2 do do if not(vV<=0)then if vV==0X1 then J=function()local Sn=(0X00001);local on=nil;repeat if Sn<=0 then if not(on>K)then else return on-q;end;Sn=0X2;elseif Sn~=0x01 then return on;else on=x();Sn=0;end;until false;end;else do kL=function(...)do return E('\035',...),{...};end;end;end;end;else EL=function(P1)local T1,r1,a1=nil,nil,(nil);for W2=0,2 do do if W2<=0x00 then T1={W(A,r,r+3)};else do if W2~=0X00001 then do a1=o(T1[IL],dL);end;else r1=o(T1[0X001],dL);end;end;end;end;end;local H1=(o(T1[3],dL));local i1=o(T1[QL],dL);do dL=(121*dL+P1)%0x0100;end;local v1=(0);do while true do if v1==0 then r=r+4;v1=0x1;else return i1*16777216+H1*65536+a1*0X00100+r1;end;end;end;end;end;end;end;local V=setfenv;local XL=({});local tL=function(NT)local BT,nT=nil,(nil);local YT=(3);repeat if not(YT<=0X1)then do if YT~=0X02 then do BT=p();end;YT=0;else for vA=0X001,BT,7997 do local gA,EA,oA=0x2,nil,nil;while gA~=0X3 do do if not(gA<=0X0000)then do if gA~=1 then EA=vA+0X0001f3D-0X01;gA=0;else oA={W(A,r+vA-1,r+EA-0X001)};gA=0X00003;end;end;else if EA>BT then EA=BT;end;gA=1;end;end;end;gA=0x0;while true do if gA~=0x0 then do nT=nT..O(B(oA));end;break;else for m0=1,#oA do local Z0=(0);repeat if Z0~=0X0 then C=(NT*C+55)%256;Z0=2;else do(oA)[m0]=o(oA[m0],C);end;do Z0=1;end;end;until Z0>1;end;gA=0X1;end;end;end;YT=1;end;end;else do if YT~=0 then r=r+BT;break;else nT="";YT=2;end;end;end;until false;do return nT;end;end;local function uL(dx,sx,Zx)local Mx,cx=Zx[3],Zx[7];local qx=Zx[1];local ex=Zx[0x0008];local jx,fx=Zx[0X09],(Zx[2]);local px=(Zx[6]);local Hx=(Zx[4]);local tx=N({},{__mode='\118'});local Ox=(nil);do Ox=function(...)local xZ,aZ=0x000,({});local uZ=((S and S()or _ENV));local AZ,dZ=kL(...);AZ=AZ-1;for Ww=0,AZ do if Hx>Ww then aZ[Ww]=dZ[Ww+0x1];else do break;end;end;end;local cZ=(uZ==m and sx or uZ);(XL)[0X03]=Zx;XL[0X4]=aZ;if not cx then dZ=nil;else if not(jx)then else(aZ)[Hx]={n=AZ>=Hx and AZ-Hx+1 or 0,B(dZ,Hx+1,AZ+1)};end;end;local UZ=(1);if cZ==uZ then else do if V then V(Ox,cZ);else _ENV=cZ;end;end;end;local eZ,zZ,TZ,hZ=k(function()repeat local yD=(px[UZ]);local iD=(yD[6]);do UZ=UZ+1;end;do if not(iD>=42)then if iD>=0X15 then if iD>=0x1f then if not(iD>=0x024)then if not(iD<0X0021)then do if iD>=34 then if iD==35 then local rx=yD[0X1];local Dx=(i(function(...)(g)();do for n8,j8 in...do g(true,n8,j8);end;end;end));(Dx)(aZ[rx],aZ[rx+1],aZ[rx+2]);xZ=rx;(aZ)[rx]=Dx;UZ=yD[0X003];else do aZ[yD[1]]={B({},0X0001,yD[3])};end;end;else aZ[yD[1]][yD[4]]=yD[7];end;end;else if iD==0x00020 then do(aZ)[yD[1]]=I(aZ[yD[3]]);end;else do aZ[yD[0X1]][aZ[yD[0X3]]]=yD[7];end;end;end;else if iD<39 then if not(iD>=0x25)then(aZ)[yD[1]]=aZ[yD[3]]-aZ[yD[0X2]];else do if iD~=0X26 then local t9=yD[0X3];aZ[yD[0X00001]]=aZ[t9]..aZ[t9+0x1];else xZ=yD[0x00001];aZ[xZ]();do xZ=xZ-0X1;end;end;end;end;else if not(iD<0x28)then if iD==41 then repeat local Bz,nz=tx,(aZ);if#Bz>0X00000 then local nT=({});for l8,a8 in h,Bz do for TS,RS in h,a8 do if RS[1]==nz and RS[0X2]>=0X0 then local LV=RS[0X002];if not nT[LV]then do nT[LV]={nz[LV]};end;end;(RS)[1]=nT[LV];RS[0X2]=0x1;end;end;end;end;until true;do return true,yD[0X1],0X001;end;else aZ[yD[1]]=aZ[yD[0x0003]]%aZ[yD[0X2]];end;else(aZ)[yD[1]]=yD[4];end;end;end;else do if iD>=26 then do if not(iD<0X001c)then if not(iD>=29)then(aZ)[yD[0X01]]=cZ[yD[4]];else do if iD~=30 then if aZ[yD[3]]<aZ[yD[2]]then do UZ=yD[1];end;end;else repeat local zu,iu=tx,aZ;if#zu>0 then local mH={};for SM,ZM in h,zu do for wF,LF in h,ZM do do if not(LF[1]==iu and LF[2]>=0X00000)then else local l4=LF[2];if not mH[l4]then(mH)[l4]={iu[l4]};end;LF[1]=mH[l4];LF[2]=0X00001;end;end;end;end;end;until true;return true,yD[0X01],0x0;end;end;end;else if iD==27 then(aZ)[yD[0X0001]]=aZ[yD[3]]>=aZ[yD[2]];else do(aZ)[yD[0X1]]=U(aZ[yD[0x3]],aZ[yD[2]]);end;end;end;end;else do if iD>=23 then if iD>=0X00018 then if iD==0X19 then(aZ[yD[0X001]])[yD[4]]=aZ[yD[2]];else if yD[2]==0X59 then UZ=UZ-0X1;(px)[UZ]={[6]=0x2d,[3]=(yD[0x3]-0x81),[1]=(yD[1]-0x081)};else repeat local Ww,aw=tx,aZ;if not(#Ww>0x0)then else local yv={};for Tj,ij in h,Ww do do for GT,VT in h,ij do if not(VT[1]==aw and VT[2]>=0X0000)then else local on=VT[2];do if not(not yv[on])then else yv[on]={aw[on]};end;end;VT[1]=yv[on];do VT[0X0002]=1;end;end;end;end;end;end;until true;return false,yD[0X1],xZ;end;end;else aZ[yD[1]]=aZ[yD[3]]<=aZ[yD[2]];end;else if iD==0X000016 then do(cZ)[yD[4]]=aZ[yD[1]];end;else if yD[2]~=0x1b then aZ[yD[1]]=aZ[yD[0X00003]];else UZ=UZ-0X1;(px)[UZ]={[6]=0X7,[1]=(yD[1]-0X00A4),[0X3]=(yD[0X3]-0XA4)};end;end;end;end;end;end;end;else if not(iD<0X0A)then if iD<0x0F then if iD<0Xc then if iD~=11 then local o1=(yD[1]);local H1,i1=aZ[o1]();if not(H1)then else do(aZ)[o1+1]=i1;end;UZ=yD[3];end;else xZ=yD[1];aZ[xZ]=aZ[xZ]();end;else if iD<0x000d then repeat local DC,eC=tx,aZ;if#DC>0X00000 then local uS={};for GK,CK in h,DC do do for df,kf in h,CK do do if kf[0X1]==eC and kf[0x2]>=0X00000 then local y4=(kf[2]);if not(not uS[y4])then else uS[y4]={eC[y4]};end;kf[1]=uS[y4];do kf[0X2]=0x1;end;end;end;end;end;end;end;until true;local Xm=yD[0X1];return false,Xm,Xm;else if iD~=14 then local nW=yD[0x1];do xZ=nW+yD[0X3]-0X00001;end;(aZ[nW])(B(aZ,nW+0x1,xZ));xZ=nW-1;else if yD[2]==93 then UZ=UZ-0X1;(px)[UZ]={[0X6]=0X7,[0X3]=(yD[0X0003]-0X00013),[0X1]=(yD[1]-19)};else(aZ)[yD[1]]=#aZ[yD[0X003]];end;end;end;end;else if iD<18 then do if iD<0X10 then(aZ)[yD[1]]=aZ[yD[3]][yD[0x0007]];else if iD==0X11 then aZ[yD[1]]=XL[yD[0X0003]];else local rG=yD[1];local bG=(i(function(...)g();for ZU in...do(g)(true,ZU);end;end));bG(aZ[rG],aZ[rG+1],aZ[rG+2]);do xZ=rG;end;(aZ)[rG]=bG;do UZ=yD[3];end;end;end;end;else if iD<0X00013 then do aZ[yD[1]]=j(aZ[yD[3]],aZ[yD[0X0002]]);end;else if iD~=20 then do if aZ[yD[3]]==aZ[yD[2]]then else UZ=yD[1];end;end;else local PY,bY=yD[0X1],(yD[3]);xZ=PY+bY-0X1;repeat local AC,KC=tx,(aZ);do if not(#AC>0)then else local yd={};for OJ,IJ in h,AC do do for wC,gC in h,IJ do if not(gC[0x01]==KC and gC[0X0002]>=0x0)then else local a5=gC[0X2];if not yd[a5]then yd[a5]={KC[a5]};end;(gC)[1]=yd[a5];do(gC)[2]=0X1;end;end;end;end;end;end;end;until true;return true,PY,bY;end;end;end;end;else if not(iD<5)then if iD>=0X7 then do if not(iD<0X8)then if iD==9 then if yD[2]~=216 then if not(not aZ[yD[1]])then else UZ=yD[0x3];end;else UZ=UZ-1;px[UZ]={[6]=45,[0x1]=(yD[1]-219),[0X3]=(yD[0X0003]-0Xdb)};end;else if not(aZ[yD[3]]<=yD[0X7])then UZ=yD[1];end;end;else if yD[2]==0X1 then do UZ=UZ-0X1;end;(px)[UZ]={[0X1]=(yD[1]-23),[0X3]=(yD[3]-0x017),[6]=0x00c};else local q1,j1=AZ-Hx,(yD[1]);if q1<0 then do q1=-1;end;end;for tm=j1,j1+q1 do aZ[tm]=dZ[Hx+(tm-j1)+1];end;xZ=j1+q1;end;end;end;else if iD~=0X6 then(aZ[yD[1]])[aZ[yD[3]]]=aZ[yD[2]];else do(aZ)[yD[0X1]]=P(aZ[yD[0x3]],aZ[yD[2]]);end;end;end;else if not(iD<0X2)then do if iD<0X3 then aZ[yD[0X1]]={};else if iD==0X4 then local Qf=yD[3];local ef=(aZ[Qf]);do for HD=Qf+0x1,yD[0X2]do ef=ef..aZ[HD];end;end;aZ[yD[1]]=ef;else local Q2=(qx[yD[3]]);local W2,B2=Q2[0X05],nil;local E2=(#W2);do if E2>0 then B2={};for kt=0X1,E2 do local Ht=W2[kt];do if Ht[1]==0 then B2[kt-1]={aZ,Ht[2]};else(B2)[kt-1]=dx[Ht[0X2]];end;end;end;y(tx,B2);end;end;do(aZ)[yD[1]]=uL(B2,cZ,Q2);end;end;end;end;else if iD==0X1 then local UG=(yD[1]);(aZ)[UG]=aZ[UG](aZ[UG+0X1]);xZ=UG;else if aZ[yD[0X003]]~=yD[7]then UZ=yD[1];end;end;end;end;end;end;else if iD<0X3f then if iD<52 then do if not(iD<47)then if not(iD>=49)then if iD~=0X00030 then local s2=yD[0X1];do(aZ)[s2]=aZ[s2](B(aZ,s2+0x1,xZ));end;xZ=s2;else local l2=dx[yD[3]];aZ[yD[0X1]]=l2[0X0001][l2[0x2]];end;else if not(iD<0X32)then if iD~=0X33 then local Yi=yD[0x0001];(aZ[Yi])(B(aZ,Yi+1,xZ));xZ=Yi-0X1;else(aZ)[yD[0X0001]]=true;end;else(aZ)[yD[0X1]]=aZ[yD[3]]+aZ[yD[0X002]];end;end;else if not(iD>=44)then if iD==43 then if yD[0X2]==252 then do UZ=UZ-1;end;(px)[UZ]={[3]=(yD[3]-209),[6]=0X34,[0X1]=(yD[1]-209)};else local s7=yD[1];for bl=s7,s7+(yD[3]-0X0001)do aZ[bl]=dZ[Hx+(bl-s7)+1];end;end;else local xz=(yD[0x00001]);xZ=xz+yD[3]-0X0001;aZ[xz]=aZ[xz](B(aZ,xz+1,xZ));xZ=xz;end;else do if not(iD>=45)then local K7,d7=yD[3],(yD[2]);local b7=(yD[0X1]);do if K7==0X00000 then else xZ=b7+K7-0X1;end;end;local J7,N7=nil,nil;do if K7==1 then J7,N7=kL(aZ[b7]());else J7,N7=kL(aZ[b7](B(aZ,b7+0x00001,xZ)));end;end;do if d7==0x1 then xZ=b7-0X00001;else if d7~=0X0 then J7=b7+d7-2;do xZ=J7+1;end;else J7=J7+b7-0X00001;xZ=J7;end;local Pq=(0);do for V5=b7,J7 do do Pq=Pq+1;end;aZ[V5]=N7[Pq];end;end;end;end;else if iD~=0X2e then do if yD[0X2]==46 then UZ=UZ-1;(px)[UZ]={[3]=(yD[3]-123),[0X1]=(yD[0X01]-0X00007B),[6]=0x4B};else aZ[yD[1]]=nil;end;end;else do aZ[yD[0X1]]=aZ[yD[3]]==yD[7];end;end;end;end;end;end;end;else if iD>=0X039 then if not(iD<0X3c)then do if iD>=61 then if iD~=62 then for VH=yD[1],yD[0X00003]do do aZ[VH]=nil;end;end;else(aZ)[yD[0X01]]=aZ[yD[3]]<aZ[yD[2]];end;else local VU=(yD[0X01]);(aZ)[VU]=aZ[VU](aZ[VU+0X1],aZ[VU+0X00002]);xZ=VU;end;end;else do if iD<0X00003a then do aZ[yD[1]]=false;end;else if iD==0x3B then local KG=yD[1];(aZ[KG])(aZ[KG+1]);xZ=KG-0x1;else do(aZ)[yD[1]]=aZ[yD[0x3]]==aZ[yD[2]];end;end;end;end;end;else do if not(iD<54)then if iD>=0X37 then do if iD~=0X38 then local pu=yD[0X1];local du=(aZ[yD[3]]);(aZ)[pu+0X001]=du;aZ[pu]=du[yD[0X7]];else local xm=yD[0X001];(aZ[xm])(aZ[xm+0X00001],aZ[xm+2]);xZ=xm-1;end;end;else if aZ[yD[0x00003]]==aZ[yD[2]]then UZ=yD[0X1];end;end;else if iD==0X35 then aZ[yD[1]]=aZ[yD[0X00003]][aZ[yD[2]]];else if yD[2]==178 then UZ=UZ-1;px[UZ]={[0x6]=7,[1]=(yD[0X0001]-171),[0X3]=(yD[0X3]-171)};else aZ[yD[1]]=not aZ[yD[0X00003]];end;end;end;end;end;end;else if not(iD>=74)then if iD<68 then if not(iD>=65)then if iD==0x40 then do if yD[2]==31 then UZ=UZ-0X00001;do(px)[UZ]={[3]=(yD[0X3]-34),[1]=(yD[1]-0x22),[6]=24};end;else do if not(aZ[yD[0x1]])then else UZ=yD[3];end;end;end;end;else local V1=yD[0X1];local f1,d1,I1=aZ[V1]();if not(f1)then else aZ[V1+0X1]=d1;do(aZ)[V1+0X00002]=I1;end;UZ=yD[3];end;end;else if not(iD<66)then if iD==0X00043 then aZ[yD[0X1]]=s(aZ[yD[3]],aZ[yD[0X2]]);else(aZ)[yD[0x1]]=aZ[yD[0X003]]/aZ[yD[0x002]];end;else do(aZ)[yD[0x1]]=aZ[yD[0x3]]^aZ[yD[2]];end;end;end;else if not(iD>=71)then if not(iD>=0x45)then XL[yD[0X0003]]=aZ[yD[0X1]];else if iD==70 then local hX=dx[yD[3]];hX[1][hX[0X2]]=aZ[yD[0x1]];else(aZ)[yD[1]]=aZ[yD[0x003]]~=yD[7];end;end;else if not(iD>=0x48)then(aZ)[yD[0X00001]]=o(aZ[yD[3]],aZ[yD[0X02]]);else if iD==73 then if aZ[yD[3]]==yD[7]then do UZ=yD[1];end;end;else UZ=yD[3];end;end;end;end;else if not(iD<0X00004f)then do if iD<0x52 then if iD>=0X00050 then if iD~=81 then repeat local QF,OF=tx,(aZ);do if not(#QF>0x0)then else local Da={};do for uN,dN in h,QF do for Pi,Bi in h,dN do do if Bi[0X1]==OF and Bi[2]>=0X0 then local Oh=(Bi[2]);if not(not Da[Oh])then else(Da)[Oh]={OF[Oh]};end;Bi[0X1]=Da[Oh];Bi[2]=1;end;end;end;end;end;end;end;until true;return;else repeat local M5,E5=tx,(aZ);if#M5>0 then local me=({});for q8,Q8 in h,M5 do for Fd,hd in h,Q8 do if not(hd[0X1]==E5 and hd[0X02]>=0)then else local K7=hd[0X2];do if not(not me[K7])then else(me)[K7]={E5[K7]};end;end;(hd)[0X1]=me[K7];hd[2]=0X1;end;end;end;end;until true;local wa=(yD[0X1]);return false,wa,wa+yD[3]-2;end;else aZ[yD[1]]=aZ[yD[3]]%yD[0X7];end;else if iD>=83 then if iD==84 then local QP=(yD[1]);local KP,qP=aZ[QP],aZ[QP+1];local oP=aZ[QP+0x2];(aZ)[QP]=i(function()for Cn=KP,qP,oP do g(true,Cn);end;end);do UZ=yD[0X3];end;else local TJ=yD[0x1];local MJ,iJ=aZ[TJ]();if not(MJ)then else do UZ=yD[0X3];end;(aZ)[TJ+0X3]=iJ;end;end;else(aZ)[yD[1]]=aZ[yD[0X03]]*aZ[yD[0X2]];end;end;end;else do if iD>=76 then if iD<0X4D then local QM,XM=yD[0X01],((yD[2]-1)*0X32);local zM=(aZ[QM]);for Pe=0X1,yD[3]do do(zM)[XM+Pe]=aZ[QM+Pe];end;end;else if iD==0X04e then(aZ)[yD[0X01]]=aZ[yD[0X3]]~=aZ[yD[0X2]];else(aZ)[yD[1]]=aZ[yD[3]]>aZ[yD[0X0002]];end;end;else if iD==75 then aZ[yD[1]]=-aZ[yD[3]];else local fB=(yD[1]);local IB=(aZ[fB]);local oB=(yD[2]-0x1)*50;for Hu=1,xZ-fB do do(IB)[oB+Hu]=aZ[fB+Hu];end;end;end;end;end;end;end;end;end;end;until false;end);if not(eZ)then if l(zZ)~="string"then(X)(zZ,0X0);else if not(c(zZ,'\097\116t\101m\112\116 t\111 \121ie\108d\032\097\099\114o\115s meta\109\101th\111\100\047C\037\045call\032bo\117nda\114\121'))then else return coroutine.yield();end;if c(zZ,"^.-:%d+: ")then X('L\117ra\112h \083\099r\105p\116:'..(Mx[UZ-0X1]or"(internal)")..': '..H(zZ),0X00000);else(X)(zZ,0X0);end;end;else if zZ then do if hZ==1 then do return aZ[TZ]();end;else return aZ[TZ](B(aZ,TZ+0x1,xZ));end;end;else if not(TZ)then else return B(aZ,TZ,hZ);end;end;end;end;end;if not(V)then else(V)(Ox,sx);end;return Ox;end;local function WL()local yg,Wg,Tg=0X1,nil,(nil);repeat if yg==0 then Tg={{},nil,{},nil,nil,{},nil,sL,sL};break;else do Wg={};end;yg=0x000;end;until false;local ag=1;Tg[4]=x();do yg=0X00;end;local Cg,hg=nil,nil;while'\101-*\065)'do if not(yg<=0X0003)then if yg<=0X5 then do if yg==4 then Tg[PL]=x();yg=3;else Cg={};yg=1;end;end;else if yg==6 then Tg[0x10]=b();do yg=5;end;else(Tg)[7]=M(hg,0X001,1)~=0;do yg=0X002;end;end;end;else if not(yg<=0x1)then do if yg==0X2 then(Tg)[0X09]=M(hg,2,1)~=0X0;break;else(Tg)[2]=x();yg=6;end;end;else if yg~=0 then hg=b();yg=0X7;else Tg[0X11]=p();yg=4;end;end;end;end;do yg=2;end;local Rg,Vg,ig,Ig=nil,nil,nil,nil;while yg<0X4 do if not(yg<=1)then if yg~=2 then ig=b();yg=0x0001;else Rg=p()-46359;yg=0X0;end;else if yg~=0 then Ig=b()~=0;yg=4;else Vg={};yg=3;end;end;end;local eg=Tg[6];yg=3;local Og=nil;while yg<=0X3 do if not(yg<=1)then do if yg~=2 then for sC=0X001,Rg do local kC=b();local GC=sL;Wg[sC-0x0001]=ag;if kC==0X79 then GC=u(tL(ig),b());elseif kC==0x20 then GC=D();else if kC==0xdc then do GC=u(tL(ig),7);end;elseif kC==fL then GC=u(tL(ig),0X4);else if kC==49 then GC=D();elseif kC==0XBC then GC=false;elseif kC==0X91 then GC=true;elseif kC==0X006A then GC=u(tL(ig),D()+p());elseif kC==0X055 then do GC=Y();end;else if kC==0X00eb then GC=D();else if kC==194 then GC=D()+p();end;end;end;end;end;local SC,fC=0,nil;while SC<=2 do do if SC<=0x0 then fC={GC,{}};SC=0X1;elseif SC~=1 then ag=ag+0X001;SC=0X003;else(Cg)[ag]=fC;SC=0X0002;end;end;end;do if not(Ig)then else for Sx=0X0,1 do if Sx~=0 then HL=HL+1;else lL[HL]=fC;end;end;end;end;end;yg=0;else do for HU=1,Og do do(eg)[HU]={[0X3]=J(),[7]=b(),[5]=b(),[4]=b(),[6]=x(),[0x002]=J(),[0X1]=J()};end;end;end;do yg=1;end;end;end;else do if yg~=0X0 then for GN=0X1,Og do local JN=Tg[6][GN];for Ns,Ys in xL(f)do local Ws,es,ps=0x0002,nil,(nil);repeat do if not(Ws<=0)then if Ws~=0X1 then es=L[Ys];do Ws=1;end;else do ps=JN[es];end;Ws=0x0;end;else do if ps==1 then local hW,uW,RW=0,nil,(nil);while hW~=0x3 do if hW<=0 then uW=Wg[JN[Ys]];do hW=1;end;else if hW~=1 then if RW then do(JN)[es]=RW[0X1];end;local BJ=(nil);local IJ=0X0;while IJ~=2 do if IJ~=0X00 then do BJ[#BJ+1]={JN,es};end;IJ=2;else BJ=RW[0X0002];IJ=0X1;end;end;end;do hW=3;end;else do RW=Cg[uW];end;hW=2;end;end;end;else if ps==0XC then do(JN)[Ys]=GN+JN[Ys]+1;end;end;end;end;do break;end;end;end;until false;end;end;do yg=4;end;else Og=p()-LL;yg=0X2;end;end;end;end;do for sY=0,0x0002 do do if not(sY<=0x0)then if sY==0X0001 then Tg[5]=Vg;else for Kc=iL,x()do(Vg)[Kc]={b(),x()};end;end;else Tg[13]=b();end;end;end;end;yg=0X0;repeat if yg~=0 then Tg[0x000E]=b();yg=2;else do(Tg)[0X010]=p();end;yg=0X1;end;until yg==0x2;yg=0X0;local Yg,Dg=nil,nil;do while true do if yg<=0X00 then Yg=p();yg=0X0001;else if yg==0X1 then for X3=1,Yg do local c3,U3,o3,S3=2,nil,nil,(nil);while c3<=2 do do if not(c3<=0)then do if c3==0X1 then S3=p();c3=3;else do U3=p();end;do c3=0X0;end;end;end;else o3=p();c3=0X1;end;end;end;for N2=U3,o3 do(Tg[3])[N2]=S3;end;end;yg=0x2;else Dg=p()-0X11513;do break;end;end;end;end;end;local cg=Tg[1];for KK=0X0,Dg-0X0001 do cg[KK]=WL();end;return Tg;end;JL=3;local nL=(nil);do while 0.9895946631947743 do if not(JL<=1)then if JL~=0x002 then do nL=WL();end;JL=0X2;else(XL)[2]=lL;JL=0;end;else do if JL==0 then lL=nil;JL=0X1;else return uL(nil,m,nL)(...);end;end;end;end;end;end)(0X00005,0XA,rawget,_ENV,0X007,21230,nil,0x4,0x1,14,16,table.unpack,2147483648,string,15,0X0C,rawset,assert,0X3,0,16777216,"",ipairs,getfenv,string.match,coroutine.yield,pcall,0X04E,0X3fF,11,"\098\097nd",6,error,bit32,table.insert,0x0008,type,0X002,0X0009,13,...);
